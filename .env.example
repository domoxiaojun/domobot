# =============================================================================
# Telegram Bot 配置文件 - 实际项目架构版本
# 复制此文件为 .env 并填入实际值
# =============================================================================

# 📋 快速配置指南：
# 1. 必须设置：BOT_TOKEN, SUPER_ADMIN_ID
# 2. 必须设置：DB_* (MySQL数据库配置)
# 3. 必须设置：REDIS_* (Redis缓存配置)
# 4. 推荐设置：DEBUG=false (生产环境)
# 5. 可选设置：WEBHOOK_* (仅使用 Webhook 时)
# 6. 其他配置都有合理默认值，可不设置

# =============================================================================
# 基础配置 (必需)
# =============================================================================

# 机器人Token - 从 @BotFather 获取
BOT_TOKEN=123456789:ABCDEFGHIJKLMNOPQRSTUVWXYZ

# 超级管理员用户ID - 从 @userinfobot 获取
SUPER_ADMIN_ID=123456789

# 调试模式 - 生产环境设为 false
DEBUG=false

# =============================================================================
# 数据库配置 (必需 - MySQL)
# =============================================================================

# MySQL 数据库配置 - 用于存储用户权限和白名单数据
DB_HOST=localhost
DB_PORT=3306
DB_NAME=bot
DB_USER=bot
DB_PASSWORD=your_mysql_password

# MySQL 连接池配置 (可选)
DB_MIN_CONNECTIONS=5               # 最小连接数
DB_MAX_CONNECTIONS=20              # 最大连接数

# =============================================================================
# Redis 配置 (必需 - 缓存和任务调度)
# =============================================================================

# Redis 配置 - 用于缓存和消息删除调度
REDIS_HOST=localhost
REDIS_PORT=6379
# REDIS_PASSWORD=your_redis_password  # 如果Redis设置了密码，取消注释
REDIS_DB=0

# Redis 连接池配置 (可选)
REDIS_MAX_CONNECTIONS=50           # 最大连接数
REDIS_HEALTH_CHECK_INTERVAL=30     # 健康检查间隔（秒）

# =============================================================================
# Webhook 配置 (可选，不设置则使用轮询模式)
# =============================================================================

# Webhook URL - 你的服务器 HTTPS 地址，设置后启用 Webhook 模式
WEBHOOK_URL=

# Webhook 监听地址 - Docker环境下建议设为 0.0.0.0
WEBHOOK_LISTEN=0.0.0.0
WEBHOOK_PORT=8443

# Webhook 密钥 - 留空自动生成
WEBHOOK_SECRET_TOKEN=

# SSL 证书路径 - 使用 Nginx 反代时留空
WEBHOOK_KEY=
WEBHOOK_CERT=

# =============================================================================
# API密钥配置 (可选但推荐)
# =============================================================================

# 汇率API密钥 - 从 https://openexchangerates.org/ 获取
# 多个密钥用逗号分隔，留空使用免费API（有限制）
EXCHANGE_RATE_API_KEYS=
# QWEATHER API密钥 - 从 https://dev.qweather.com/ 获取
QWEATHER_API_KEY=

# =============================================================================
# 缓存时间配置 (单位：秒，可选 - 全部存储在Redis)
# =============================================================================

# 默认缓存配置
DEFAULT_CACHE_DURATION=3600                # 默认缓存 1小时
RATE_CACHE_DURATION=3600                   # 汇率缓存 1小时

# 各服务缓存时间 (推荐值)
APP_STORE_CACHE_DURATION=1209600           # App Store 14天
APP_STORE_SEARCH_CACHE_DURATION=1209600    # App Store搜索 14天
APPLE_SERVICES_CACHE_DURATION=86400        # Apple服务 1天
GOOGLE_PLAY_APP_CACHE_DURATION=21600       # Google Play应用 6小时
GOOGLE_PLAY_SEARCH_CACHE_DURATION=43200    # Google Play搜索 12小时
STEAM_CACHE_DURATION=259200                # Steam 3天 (可设置604800=7天)
NETFLIX_CACHE_DURATION=86400               # Netflix 1天
SPOTIFY_CACHE_DURATION=691200              # Spotify 8天
DISNEY_CACHE_DURATION=691200               # Disney+ 8天

# =============================================================================
# 消息管理配置 (可选)
# =============================================================================

# 消息自动删除时间 (秒)
AUTO_DELETE_DELAY=180                      # 机器人回复消息删除延迟 (默认3分钟)
USER_COMMAND_DELETE_DELAY=0                # 用户命令消息删除延迟 (默认立即)

# 是否删除用户命令消息
DELETE_USER_COMMANDS=true

# 消息折叠阈值（行数）
FOLDING_THRESHOLD=15

# =============================================================================
# 用户缓存配置 (可选功能)
# =============================================================================

# 启用用户缓存 (true/false)
ENABLE_USER_CACHE=false

# 从这些群组ID缓存用户 (逗号分隔，例如: -100123456,-100987654)
# 留空则从所有群组缓存（如果启用）
USER_CACHE_GROUP_IDS=

# =============================================================================
# 定时任务配置 (可选)
# =============================================================================

# 定时清理配置 - 每周日 UTC 5:00 清理过期缓存
SPOTIFY_WEEKLY_CLEANUP=false              # Spotify缓存周清理
DISNEY_WEEKLY_CLEANUP=false               # Disney+缓存周清理

# =============================================================================
# 自定义脚本配置 (高级功能)
# =============================================================================

# 是否加载自定义脚本
LOAD_CUSTOM_SCRIPTS=false

# 自定义脚本目录
CUSTOM_SCRIPTS_DIR=custom_scripts

# 告警脚本配置: JSON字符串映射群组ID到目标用户名
# 示例: '{"-100123456": "user1", "-100789012": "user2"}'
ALERTER_CONFIG={}

# =============================================================================
# 性能配置 (高级设置，一般不需要修改)
# =============================================================================

# HTTP请求配置
MAX_CONCURRENT_REQUESTS=10                # 最大并发请求数
REQUEST_TIMEOUT=30                        # 请求超时时间（秒）
MAX_RETRIES=3                            # 最大重试次数

# 速率限制配置
RATE_LIMIT_ENABLED=true                   # 启用速率限制
MAX_REQUESTS_PER_MINUTE=30                # 每分钟最大请求数

# =============================================================================
# 日志配置 (可选)
# =============================================================================

# 日志级别: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO

# 日志文件配置 (留空自动生成)
# LOG_FILE=                                # 日志文件路径
# LOG_MAX_SIZE=10485760                    # 日志文件最大大小 (10MB)
# LOG_BACKUP_COUNT=5                       # 保留日志文件数量

# =============================================================================
# 功能开关 (可选，默认全部启用)
# =============================================================================

# 服务功能开关
# STEAM_ENABLED=true
# NETFLIX_ENABLED=true
# SPOTIFY_ENABLED=true
# DISNEY_ENABLED=true
# APPSTORE_ENABLED=true
# GOOGLEPLAY_ENABLED=true
# APPLE_SERVICES_ENABLED=true
# RATE_CONVERSION_ENABLED=true

# =============================================================================
# 使用说明
# =============================================================================

# 📖 快速开始：
# 1. 复制此文件：cp .env.example .env
# 2. 设置 BOT_TOKEN 和 SUPER_ADMIN_ID
# 3. 配置 MySQL 数据库：DB_HOST, DB_NAME, DB_USER, DB_PASSWORD
# 4. 配置 Redis：REDIS_HOST, REDIS_PORT (如有密码加上REDIS_PASSWORD)
# 5. 其他配置保持默认即可

# 🏗️ 架构说明：
# - MySQL：存储用户权限、白名单、管理员数据
# - Redis：缓存价格数据、汇率数据、消息删除调度
# - 自动数据库初始化：首次运行会自动创建必要的表结构
# - 注意：不需要创建cache目录，所有缓存都存储在Redis中

# 🚀 生产环境建议：
# - 设置 DEBUG=false
# - 配置 EXCHANGE_RATE_API_KEYS 提高汇率查询限制
# - 确保 logs 和 cache 目录有写入权限
# - 使用独立的 MySQL 和 Redis 服务器
# - 定期备份 MySQL 数据库
